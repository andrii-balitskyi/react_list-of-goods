{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","isListVisible","isReversed","sortBy","makeListVisible","setState","makeReversed","sortByGoodName","sortByLength","resetList","this","goodsFromServerCopy","sort","currGood","nextGood","localeCompare","length","reverse","className","type","onClick","map","good","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAGMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA6GaC,E,4MAzGbC,MAAQ,CACNC,eAAe,EACfC,YAAY,EACZC,OAAQ,I,EAGVC,gBAAkB,kBAChB,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,eAAgBD,EAAMC,mB,EAI1BK,aAAe,kBACb,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAIvBK,eAAiB,WACf,EAAKF,SAAS,CAAEF,OAAQ,c,EAG1BK,aAAe,WACb,EAAKH,SAAS,CAAEF,OAAQ,Y,EAG1BM,UAAY,WACV,EAAKJ,SAAS,CACZH,YAAY,EACZC,OAAQ,M,4CAIZ,WACE,MAA8CO,KAAKV,MAA3CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,OAC7BQ,EAAmB,UAAOb,GAmBhC,OAjBAa,EAAoBC,MAAK,SAACC,EAAUC,GAClC,OAAQX,GACN,IAAK,WACH,OAAOU,EAASE,cAAcD,GAEhC,IAAK,SACH,OAAOD,EAASG,OAASF,EAASE,OAEpC,QACE,OAAO,MAITd,GACFS,EAAoBM,UAIpB,yBAAKC,UAAU,OACb,sCACEjB,GACA,4BACEkB,KAAK,SACLC,QAASV,KAAKN,iBAFhB,SAODH,GACC,oCACE,4BACGU,EAAoBU,KAAI,SAAAC,GAAI,OAC3B,wBAAIC,IAAKD,GACNA,OAIP,4BACEH,KAAK,SACLC,QAASV,KAAKJ,cAFhB,WAMA,4BACEa,KAAK,SACLC,QAASV,KAAKH,gBAFhB,uBAMA,4BACEY,KAAK,SACLC,QAASV,KAAKF,cAFhB,kBAMA,4BACEW,KAAK,SACLC,QAASV,KAAKD,WAFhB,e,GA7FMe,IAAMC,WCZxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.157a14d6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isListVisible: false,\n    isReversed: false,\n    sortBy: '',\n  }\n\n  makeListVisible = () => (\n    this.setState(state => ({\n      isListVisible: !state.isListVisible,\n    }))\n  )\n\n  makeReversed = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  )\n\n  sortByGoodName = () => {\n    this.setState({ sortBy: 'goodName' });\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  resetList = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n    });\n  }\n\n  render() {\n    const { isListVisible, isReversed, sortBy } = this.state;\n    const goodsFromServerCopy = [...goodsFromServer];\n\n    goodsFromServerCopy.sort((currGood, nextGood) => {\n      switch (sortBy) {\n        case 'goodName':\n          return currGood.localeCompare(nextGood);\n\n        case 'length':\n          return currGood.length - nextGood.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsFromServerCopy.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {!isListVisible && (\n          <button\n            type=\"button\"\n            onClick={this.makeListVisible}\n          >\n            Start\n          </button>\n        )}\n        {isListVisible && (\n          <>\n            <ul>\n              {goodsFromServerCopy.map(good => (\n                <li key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              type=\"button\"\n              onClick={this.makeReversed}\n            >\n              Reverse\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.sortByGoodName}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.resetList}\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}